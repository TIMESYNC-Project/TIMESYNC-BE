openapi: 3.0.3
info:
  title: TIMESYNC
  description: This is API for Group Project By Alterra Academy
  version: "1.0.0"
  contact:
    email: fauzilax@gmail.com
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
tags:
  - name: login
    description: Endpoint for verifying who a user is
  - name: Admin
  - name: Employee

servers:
  # Added by API Auto Mocking Plugin
  # Added by API Auto Mocking Plugin
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/ALIFMUHAMADHAFIDZ23/TimeSync/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/fauzilax/TIMESYNC/1.0.0
  - url: https://shirayuki.site
    description: primarry link

paths:
  /register:
    post:
      tags:
        - "Admin"
      description: feature for admin registration new employee
      security:
        - JWTAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                birth_of_date:
                  type: string
                nip:
                  type: string
                email:
                  type: string
                  format: email
                gender:
                  type: string
                position:
                  type: string
                phone:
                  type: string
                address:
                  type: string
                password:
                  type: string
                  format: password
            example:
              name: "Fauzi Sofyan"
              birth_of_date: "2000-01-31"
              email: "fauzilax@gmail.com"
              gender: "male"
              position: "backend engineer"
              phone: "0813456"
              address: "bandung"
              password: "123"
      responses:
        201:
          description: "success insert data"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "success create account"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /register/csv:
    post:
      tags:
        - "Admin"
      description: feature for admin registration new employee
      security:
        - JWTAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        201:
          description: "success insert data"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "success create account from csv"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /login:
    post:
      tags:
        - login
      description: login feature for admin and employee
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nip:
                  type: string
                password:
                  type: string
                  format: password
            example:
              nip: "23001"
              password: "12323"
      responses:
        200:
          description: "login success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 2
                  name: "Fauzi Sofyan"
                  email: "fauzilax@gmail.com"
                  nip: "23001"
                  gender: "male"
                  postion: "backend engineer"
                  role: "employee"
                message: "login success"
                token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJ1c2VySUQiOjR9.QTZxERh4CwC_UnL_eJvTi_A_qdLeBZ-IjR4nqoxjodk"
                token_expired_at: "2023-02-09 00:52"
        400:
          $ref: "#/components/responses/400"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "account not registered"
        500:
          $ref: "#/components/responses/500"
  /companies:
    get:
      tags:
        - "Admin"
      description: get company profile information
      security:
        - JWTAuth: []
      summary: get company profile information
      responses:
        200:
          description: success show company profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 1
                  company_picture: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg"
                  company_name: "Time Sync"
                  company_email: "timesync@company.co.id"
                  description: "Time Sync is a company that make a digital product"
                  company_adress: "Jl. Raya Tidar No.23, Karangbesuki, Kec. Sukun, Kota Malang, Jawa Timur 65146"
                  company_phone: "0813456"
                  sosmed: "@timesync"
                message: success show company profile
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
    put:
      tags:
        - Admin
      description: update company information
      summary: update company information
      security:
        - JWTAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                company_picture:
                  type: string
                  format: binary
            example:
              company_picture: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg"
          application/json:
            schema:
              type: object
              properties:
                company_name:
                  type: string
                company_email:
                  type: string
                  format: email
                description:
                  type: string
                company_adress:
                  type: string
                company_phone:
                  type: string
                sosmed:
                  type: object
            example:
              company_picture: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg"
              company_name: "Time Sync"
              company_email: "timesync@company.co.id"
              description: "Time Sync is a company that make a digital product"
              company_adress: "Jl. Raya Tidar No.23, Karangbesuki, Kec. Sukun, Kota Malang, Jawa Timur 65146"
              company_phone: "0813456"
              sosmed: "@timesync"
      responses:
        200:
          description: success update profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 1
                  company_picture: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg"
                  company_name: "Time Sync"
                  company_email: "timesync@company.co.id"
                  description: "Time Sync is a company that make a digital product"
                  company_adress: "Jl. Raya Tidar No.23, Karangbesuki, Kec. Sukun, Kota Malang, Jawa Timur 65146"
                  company_phone: "0813456"
                  sosmed: "@timesync"
                message: success update company profile
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /employees:
    put:
      tags:
        - "Employee"
      description: edit employee profile
      summary: edit employee profile
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                profile_picture:
                  type: string
                  format: binary
            example:
              profile_picture: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg"
          application/json:
            schema:
              type: object
              example:
                password: "test123"
      responses:
        200:
          description: success update profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 1
                  profile_picture: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg"
                  password: "$2a$10$byKkieP4Js.Ioe.rcWiKiuFfFDGhRJUIzIqTtjyDtpjHVGTiyOeEW"
                message: "success update employee profile"
        400:
          $ref: "#/components/responses/400"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "data not found"
        500:
          $ref: "#/components/responses/500"
    get:
      tags:
        - "Admin"
      description: get employee data
      summary: get employee data
      security:
        - JWTAuth: []
      responses:
        200:
          description: success show employee profile
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  [
                    {
                      id: 2,
                      profile_picture: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg",
                      name: "Fauzi Sofyan",
                      nip: "21",
                      postion: "backend engineer",
                    },
                    {
                      id: 3,
                      profile_picture: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg",
                      name: "Aryo Yudhanto",
                      nip: "22",
                      postion: "frontend engineer",
                    },
                  ]
                message: success show all employee
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /employees/profile:
    get:
      tags:
        - "Employee"
      description: get employee profile
      summary: get employee profile
      security:
        - JWTAuth: []
      responses:
        200:
          description: success show employee profile
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 2
                  profile_picture: "https://fauziawsbucket.s3.ap-southeast-1.amazonaws.com/559d75ff-88c8-40af-8740-233667b36feco.png"
                  name: "Fauzi Sofyan"
                  birth_of_date: "2000-01-31"
                  nip: "23001"
                  email: "fauzilax@gmail.com"
                  gender: "Male"
                  position: "Backend Engineer"
                  phone: "00888"
                  address: "bdg"
                  annual_leave: 14
                message: "success show profile"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /employees/{id}:
    put:
      tags:
        - "Admin"
      description: edit employee profile
      summary: edit employee profile
      security:
        - JWTAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                profile_picture:
                  type: string
                  format: binary
            example:
              profile_picture: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg"
          application/json:
            schema:
              type: object
              example:
                name: "Fauzi Sofyan"
                birth_of_date: "2000-01-31"
                email: "fauzilax@gmail.com"
                postion: "backend engineer"
                phone: "0813456"
                address: "bandung"
                password: "123"
      responses:
        200:
          description: success update profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 2
                  profile_picture: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg"
                  name: "Fauzi Sofyan"
                  email: "fauzilax@gmail.com"
                  postion: "backend engineer"
                  phone: "0813456"
                  address: "bandung"
                  password: "$2a$10$ZgX2yxsERa7LEqBfSJTI3uyRROxvzlDvq5zTwiCq3CxSWEQWe7H16"
                message: update profile success
        400:
          $ref: "#/components/responses/400"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "account not registered"
        500:
          $ref: "#/components/responses/500"
    get:
      tags:
        - "Admin"
      description: get employee profile
      summary: get employee profile
      security:
        - JWTAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: success show employee profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 2
                  profile_picture: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg"
                  name: "Fauzi Sofyan"
                  birth_of_date: "2000-01-31"
                  nip: "21"
                  email: "fauzilax@gmail.com"
                  gender: "male"
                  postion: "backend engineer"
                  phone: "0813456"
                  address: "bandung"
                  annual_leave: 14
                message: success show profile
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
    delete:
      tags:
        - "Admin"
      description: deactivate employee account
      summary: deactivate employee account
      security:
        - JWTAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: success deactivate employee profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "success deactivate employee profile"
        400:
          $ref: "#/components/responses/400"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "data not found"
        500:
          $ref: "#/components/responses/500"
  /setting:
    put:
      tags:
        - "Admin"
      description: settings feature for admin to set working hour and annual leave for employee
      summary: settings feature for admin to set working hour and annual leave for employee
      security:
        - JWTAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                working_hour_start:
                  type: string
                  example: "08:00"
                working_hour_end:
                  type: string
                  example: "17:00"
                tolerance:
                  type: integer
                  example: 30
                annual_leave:
                  type: integer
                  example: 14
      responses:
        200:
          description: "success update working hour schedule and annual leave for employee"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  working_hour_start: "08:00"
                  working_hour_end: "17:00"
                  tolerance: 30
                  annual_leave: 14
                message: "success change setting"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
    get:
      tags:
        - "Admin"
      description: get working hour and annual leave for employee
      summary: get working hour and annual leave for employee
      responses:
        200:
          description: "success get working hour schedule and annual leave for employee"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 1
                  working_hour_start: "19:00"
                  working_hour_end: "20:30"
                  tolerance: 20
                  annual_leave: 14
                message: "success show setting"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /announcements:
    post:
      tags:
        - "Admin"
      description: announcement feature for admin to send message to employee
      summary: announcement feature for admin to send message to employee
      security:
        - JWTAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                announcement_title:
                  type: string
                  example: "Libur"
                announcement_description:
                  type: string
                  example: "Karena besok ada rapat atasan mendadak, jadi kantor diliburkan"
                to:
                  type: string
                  example: "2303"
      responses:
        201:
          description: "success send announcement message to employee"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 1
                  to: "2303"
                  type: "personal"
                  announcement_title: "Libur"
                  announcement_description: "Karena besok ada rapat atasan mendadak, jadi kantor diliburkan"
                  created_at: "2023-02-02"
                message: "send announcement message to employee success"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
    get:
      tags:
        - "Admin"
      description: get all announcement message for admin
      summary: get all announcement message for admin
      security:
        - JWTAuth: []
      responses:
        200:
          description: "success get all announcement message for admin"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  [
                    {
                      id: 1,
                      to: "",
                      nip: "",
                      announcement_title: "Libur",
                      announcement_description: "Karena besok ada rapat atasan mendadak, jadi kantor diliburkan",
                      created_at: "2023-02-02",
                    },
                    {
                      id: 2,
                      to: "Fauzi",
                      nip: "23011",
                      announcement_title: "Wajib Masuk",
                      announcement_description: "Karena sabtu nanti ada agenda kerja bakti, jadi semua karyawan diharapkan untuk hadir",
                      created_at: "2023-02-02",
                    },
                  ]
                message: "get all announcement"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /announcements/{id}:
    get:
      tags:
        - "Employee"
      description: get announcement details message
      summary: get announcement details
      security:
        - JWTAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: "get announcement details"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 2
                  to: "Fauzi"
                  nip: "23010"
                  announcement_title: "Libur"
                  announcement_description: "Karena besok ada rapat atasan mendadak, jadi kantor diliburkan"
                  created_at: "2023-02-02"
                message: "success get announcement details"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
    delete:
      tags:
        - "Admin"
      description: delete announcement message
      summary: delete announcement message
      security:
        - JWTAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: success delete announcement message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "success delete announcement"
        400:
          $ref: "#/components/responses/400"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "data not found"
        500:
          $ref: "#/components/responses/500"
  /presences/total:
    get:
      tags:
        - "Admin"
      description: total employee precences in a day
      summary: total employee precences in a day
      security:
        - JWTAuth: []
      responses:
        200:
          description: "success get total employee precences"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  [
                    {
                      id: 1,
                      attendance_date: "2023-02-08",
                      clock_in: "01:05",
                      clock_in_location: "Jalan Duren Sawit Baru Daerah Khusus Ibukota Jakarta,,13440,Indonesia",
                      clock_in_map_location: "https://www.openstreetmap.org/#map=19/-6.232191/106.915202",
                      clock_out: "01:10",
                      clock_out_location: "Jalan 25 Daerah Khusus Ibukota Jakarta,,13440,Indonesia",
                      clock_out_map_location: "https://www.openstreetmap.org/#map=19/-6.235400/106.919860",
                      attendance: "present",
                      attendance_status: "ontime",
                      work_time: "07h 25m",
                    },
                    {
                      id: 2,
                      attendance_date: "2023-02-08",
                      clock_in: "01:05",
                      clock_in_location: "Jalan Duren Sawit Baru Daerah Khusus Ibukota Jakarta,,13440,Indonesia",
                      clock_in_map_location: "https://www.openstreetmap.org/#map=19/-6.232191/106.915202",
                      clock_out: "01:10",
                      clock_out_location: "Jalan 25 Daerah Khusus Ibukota Jakarta,,13440,Indonesia",
                      clock_out_map_location: "https://www.openstreetmap.org/#map=19/-6.235400/106.919860",
                      attendance: "present",
                      attendance_status: "ontime",
                      work_time: "07h 25m",
                    },
                  ]

                message: "success show all employe presence data today"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /presences:
    get:
      tags:
        - "Employee"
      description: total precences in a day per employee
      summary: total precences in a day per employee
      security:
        - JWTAuth: []
      responses:
        200:
          description: "success get total precences in a day per employee"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 1
                  attendace_date: "2023-02-02"
                  clock_in: "04:58"
                  clock_in_location: "Jln.Jalan"
                  clock_in_map_location: "https://www.openstreetmap.org/#map=19/-2.8837/104.6896"
                  clock_out: "05:00"
                  clock_out_location: "Jln.Jalan"
                  clock_out_map_location: "https://www.openstreetmap.org/#map=19/-2.8837/104.6896"
                  attendace: "present"
                  attendance_status: "ontime"
                  work_time: "00h 04m"
                message: "success show presence data today"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /attendances/{id}:
    post:
      tags:
        - "Admin"
      description: edit employee attendance status
      summary: edit employee attendance status
      security:
        - JWTAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                attendance:
                  type: object
                  example: ["annual leave", "on leave", "sick leave"]
                date_start:
                  type: string
                  example: "2023-02-01"
                date_end:
                  type: string
                  example: "2023-02-04"
      responses:
        200:
          description: "edit employee attendance status success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                message: "success create attendance"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /attendances:
    post:
      tags:
        - "Employee"
      description: clock in for employee attendance at start of working hour
      summary: clock in for employee attendance at start of working hour
      security:
        - JWTAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                latitude:
                  type: number
                  format: double
                  example: -6.4096
                longitude:
                  type: number
                  format: double
                  example: 106.8185
      responses:
        200:
          description: "clock in success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  data:
                  id: 1
                  attendace_date: "2023-02-02"
                  clock_in: "04:58"
                  clock_in_location: "Jln.Jalan"
                  clock_in_map_location: "https://www.openstreetmap.org/#map=19/-2.8837/104.6896"
                  clock_out: ""
                  clock_out_location: ""
                  clock_out_map_location: ""
                  attendace: "present"
                  attendance_status: "ontime"
                  work_time: "01h 40m"
                message: "clock in success"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
    put:
      tags:
        - "Employee"
      description: clock out for employee attendance after working hour
      summary: clock out for employee attendance after working hour
      security:
        - JWTAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                latitude:
                  type: number
                  format: double
                  example: -6.4096
                longitude:
                  type: number
                  format: double
                  example: 106.8185
      responses:
        200:
          description: "clock out success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  data:
                  id: 1
                  attendace_date: "2023-02-02"
                  clock_in: "04:58"
                  clock_in_location: "Jln.Jalan"
                  clock_in_map_location: "https://www.openstreetmap.org/#map=19/-2.8837/104.6896"
                  clock_out: "05:00"
                  clock_out_location: "Jln.Jalan"
                  clock_out_map_location: "https://www.openstreetmap.org/#map=19/-2.8837/104.6896"
                  attendace: "present"
                  attendance_status: "ontime"
                  work_time: "00h 04m"
                message: "clock out success"
        400:
          $ref: "#/components/responses/400"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "data not found"
        500:
          $ref: "#/components/responses/500"
    get:
      tags:
        - "Employee"
      description: get employee attendance record
      summary: get employee attendance record
      security:
        - JWTAuth: []
      responses:
        200:
          description: success show employee attendance record
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  [
                    {
                      id: 1,
                      attendace_date: "2023-02-01",
                      clock_in: "07:50",
                      clock_out: "17:00",
                      attendance: "presence",
                      attendance_status: "late",
                    },
                    {
                      id: 2,
                      attendace_date: "2023-02-02",
                      clock_in: "08:00",
                      clock_out: "17:20",
                      attendance: "presence",
                      attendance_status: "ontime",
                    },
                    {
                      id: 3,
                      attendace_date: "2023-02-03",
                      clock_in: "",
                      clock_out: "",
                      attendance: "presence",
                      attendance_status: "late",
                    },
                    {
                      id: 4,
                      attendace_date: "2023-02-04",
                      clock_in: "",
                      clock_out: "",
                      attendance: "presence",
                      attendance_status: "ontime",
                    },
                    {
                      id: 0,
                      attendace_date: "2023-02-05",
                      clock_in: "",
                      clock_out: "",
                      attendance: "absent",
                      attendance_status: "",
                    },
                  ]
                message: success show employee attendance record
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /approvals:
    post:
      tags:
        - "Employee"
      description: employee can propose for permission to be absent
      summary: employee can propose for permission to be absent
      security:
        - JWTAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
            example:
              approval_image: "https://1.bp.blogspot.com/-e8s4FEI8wKs/WgpNDkIWdhI/AAAAAAAAAyQ/SUryjPXhJ28zqb32zPCyGZLjXCT0khK2wCLcBGAs/s1600/Contoh%2BSurat%2BKeterangan%2BSakit.png"
          application/json:
            schema:
              type: object
              properties:
                approval_title:
                  type: object
                  example: ["sick", "leave", "late"]
                approval_start_date:
                  type: string
                  example: "2023-02-01"
                approval_end_date:
                  type: string
                  example: "2023-02-02"
                approval_description:
                  type: string
                  example: "i am going to hospital today, my body didn't feel so good for work"
      responses:
        200:
          description: "success send an approval"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 1
                  approval_title: "sick"
                  approval_start_date: "2023-02-01"
                  approval_end_date: "2023-02-02"
                  approval_description: "i am going to hospital today, my body didn't feel so good for work"
                  approval_image: "https://1.bp.blogspot.com/-e8s4FEI8wKs/WgpNDkIWdhI/AAAAAAAAAyQ/SUryjPXhJ28zqb32zPCyGZLjXCT0khK2wCLcBGAs/s1600/Contoh%2BSurat%2BKeterangan%2BSakit.png"
                  approval_status: "pending"
                message: "send an approval success"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
    get:
      tags:
        - "Admin"
      description: get all employee approval record
      summary: get all employee approval record
      security:
        - JWTAuth: []
      responses:
        200:
          description: success show employee approval record
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  [
                    {
                      id: 1,
                      employee_name: "Alif",
                      approval_title: "Izin",
                      approval_start_date: "2023-02-01",
                      approval_end_date: "2023-02-04",
                      approval_description: "Cakit",
                      approval_status: "pending",
                      approval_image: "",
                      created_at: "2023-02-1",
                    },
                    {
                      id: 2,
                      employee_name: "Fauzi",
                      approval_title: "Izin",
                      approval_start_date: "2023-02-04",
                      approval_end_date: "2023-02-06",
                      approval_description: "izin",
                      approval_status: "approved",
                      approval_image: "https://fauziawsbucket.s3.ap-southeast-1.amazonaws.com/50afe12c-b4f8-4e7e-a25d-217afda264edo.png",
                      created_at: "2023-02-1",
                    },
                    {
                      id: 3,
                      employee_name: "Zain",
                      approval_title: "Izin",
                      approval_start_date: "2023-02-04",
                      approval_end_date: "2023-02-06",
                      approval_description: "Izin",
                      approval_status: "rejected",
                      approval_image: "https://fauziawsbucket.s3.ap-southeast-1.amazonaws.com/50afe12c-b4f8-4e7e-a25d-217afda264edo.png",
                      created_at: "2023-02-1",
                    },
                    {
                      id: 4,
                      employee_name: "Yudha",
                      approval_title: "Sakit",
                      approval_start_date: "2023-02-04",
                      approval_end_date: "2023-02-06",
                      approval_description: "Cakit",
                      approval_status: "pending",
                      approval_image: "",
                      created_at: "2023-02-1",
                    },
                  ]
                message: "success show all employee approval record"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /approvals/{id}:
    get:
      tags:
        - "Admin"
      description: get approval detail
      summary: get approval detail
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: "success approve employee permission"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 1
                  approval_title: "sick"
                  approval_start_date: "2023-02-01"
                  approval_end_date: "2023-02-05"
                  approval_description: "i am going to hospital today, my body didn't feel so good for work"
                  approval_status: "approved"
                  approval_image: "https://1.bp.blogspot.com/-e8s4FEI8wKs/WgpNDkIWdhI/AAAAAAAAAyQ/SUryjPXhJ28zqb32zPCyGZLjXCT0khK2wCLcBGAs/s1600/Contoh%2BSurat%2BKeterangan%2BSakit.png"
                message: "success get approval detail"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
    put:
      tags:
        - "Admin"
      description: Approval for Admin
      summary: Approval for Admin
      security:
        - JWTAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                approval_status:
                  type: string
                  example: "approved"
      responses:
        200:
          description: "success approve employee permission"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 1
                  approval_title: "sick"
                  approval_start_date: "2023-02-01"
                  approval_end_date: "2023-02-05"
                  approval_description: "i am going to hospital today, my body didn't feel so good for work"
                  approval_image: "https://1.bp.blogspot.com/-e8s4FEI8wKs/WgpNDkIWdhI/AAAAAAAAAyQ/SUryjPXhJ28zqb32zPCyGZLjXCT0khK2wCLcBGAs/s1600/Contoh%2BSurat%2BKeterangan%2BSakit.png"
                  approval_status: "approved"
                message: "success approve employee permission"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /employee/approvals:
    get:
      tags:
        - "Employee"
      description: get employee approval record
      summary: get employee approval record
      security:
        - JWTAuth: []
      responses:
        200:
          description: success show employee approval record
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  [
                    {
                      id: 1,
                      employee_name: "Alif",
                      approval_title: "sakit",
                      approval_start_date: "2023-02-01",
                      approval_end_date: "2023-02-04",
                      approval_description: "Saya Pusing pak, saya izin mengirim surat dari dokter sebagai bukti",
                      approval_status: "Pending",
                      approval_image: "",
                      created_at: "2023-02-1",
                    },
                    {
                      id: 2,
                      employee_name: "Alif",
                      approval_title: "leave",
                      approval_start_date: "2023-02-04",
                      approval_end_date: "2023-02-06",
                      approval_description: "pengen liburan pak",
                      approval_status: "Pending",
                      approval_image: "https://fauziawsbucket.s3.ap-southeast-1.amazonaws.com/c8b84b6e-ceec-4d79-86de-206a7eb5c750o.png",
                      created_at: "2023-02-4",
                    },
                  ]
                message: success show employee approval record
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /inbox:
    get:
      tags:
        - "Employee"
      description: get inbox message from admin for employee
      summary: get inbox message from admin for employee
      security:
        - JWTAuth: []
      responses:
        200:
          description: success show message from admin for employee
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  [
                    {
                      id: 1,
                      to: "alif",
                      nip: "23002",
                      announcement_title: "Peringatan",
                      announcement_description: "Silahkan menghadap saya ke kantor HRD, segera",
                      created_at: "2023-02-02",
                    },
                    {
                      id: 2,
                      to: "",
                      nip: "",
                      announcement_title: "Libur",
                      announcement_description: "Karena besok ada rapat atasan mendadak, jadi kantor diliburkan",
                      created_at: "2023-02-01",
                    },
                  ]
                message: success show employee inbox message
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /graph:
    get:
      tags:
        - "Admin"
      summary: employee graph data
      description: to show graph by employee working hour and employee late data
      security:
        - JWTAuth: []
      parameters:
        - in: query
          name: mtwh
          schema:
            example: "mtwh"
            type: string
          description: the keyword used to find employee monthly working hour graph
        - in: query
          name: mtel
          schema:
            example: "mtel"
            type: string
          description: the keyword used to find monthly late employee graph
      responses:
        200:
          description: success show graph data for employee weekly working hour
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                desc: mtel
                data:
                  [
                    {
                      employee_name: "Fauzi",
                      employee_nip: 23003,
                      monthly_total_employee_late: 10,
                    },
                    {
                      employee_name: "Alif",
                      employee_nip: 23006,
                      monthly_total_employee_late: 2,
                    },
                  ]
                message: success show graph data

        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /search:
    get:
      tags:
        - "Admin"
      summary: find employee
      description: searching employee by their name,nip or position
      security:
        - JWTAuth: []
      parameters:
        - in: query
          name: q
          schema:
            example: "fauzi"
            type: string
          required: true
          description: the keyword used to find employee_name
      responses:
        200:
          description: success show employee profile
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  [
                    {
                      id: 1,
                      profile_picture: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg",
                      name: "Fauzi Sofyan",
                      nip: "23010",
                      postion: "backend engineer",
                    },
                  ]
                message: "searching success"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /record/{id}:
    get:
      tags:
        - "Admin"
      summary: get employee attendance history
      description: to get employee attendance history
      security:
        - JWTAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: success show employee attendance history
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  {
                    employee_name: "Fauzi",
                    record:
                      [
                        {
                          id: 1,
                          attendace_date: "2023-02-01",
                          clock_in: "07:50",
                          clock_out: "17:00",
                          attendance: "presence",
                          attendance_status: "late",
                        },
                        {
                          id: 2,
                          attendace_date: "2023-02-02",
                          clock_in: "08:00",
                          clock_out: "17:20",
                          attendance: "presence",
                          attendance_status: "ontime",
                        },
                        {
                          id: 3,
                          attendace_date: "2023-02-03",
                          clock_in: "",
                          clock_out: "",
                          attendance: "presence",
                          attendance_status: "late",
                        },
                        {
                          id: 4,
                          attendace_date: "2023-02-04",
                          clock_in: "",
                          clock_out: "",
                          attendance: "presence",
                          attendance_status: "ontime",
                        },
                        {
                          id: 0,
                          attendace_date: "2023-02-05",
                          clock_in: "",
                          clock_out: "",
                          attendance: "absent",
                          attendance_status: "",
                        },
                      ],
                  }
                message: success show employee attendance record
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"

  /presences/detail/{id}:
    get:
      tags:
        - "Admin"
      summary: get employee presence detail
      description: get employee presence detail
      security:
        - JWTAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: success show employee profile
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1
                  attendace_date: "2023-02-01"
                  clock_in: "10:39"
                  clock_in_location: "Depok,Jawa Barat"
                  clock_in_map_location: "https://www.openstreetmap.org/#map=19/-5.322/104.322"
                  clock_out: "10:55"
                  clock_out_location: "Depok,Jawa Barat"
                  clock_out_map_location: "https://www.openstreetmap.org/#map=19/-5.322/104.322"
                  attendance: "present"
                  attendance_status: "late"
                  work_time: "00h 16m"
                message: success show presence data detail
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"

components:
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    responseObject:
      type: object
      properties:
        data:
          type: object
        message:
          type: string
  responses:
    400:
      description: "error from user"
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
          example:
            message: "bad request"
    500:
      description: "error from server"
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
          example:
            message: "internal server error"
