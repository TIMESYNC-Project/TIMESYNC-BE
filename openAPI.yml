openapi: 3.0.3
info:
  title: TIMESYNC
  description: This is API for Group Project By Alterra Academy
  version: "1.0.0"
  contact:
    email: fauzilax@gmail.com
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
tags:
  - name: login
    description: Endpoint for verifying who a user is
  - name: Admin
  - name: Employee

servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/fauzilax/kurabsent/1.0.0
  - url: https://shirayuki.site
    description: primarry link

paths:
  /register:
    post:
      tags:
        - "Admin"
      description: feature for admin registration new employee
      security:
        - JWTAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                birth_of_date:
                  type: string
                nip:
                  type: string
                email:
                  type: string
                  format: email
                gender:
                  type: string
                position:
                  type: string
                phone:
                  type: string
                address:
                  type: string
                password:
                  type: string
                  format: password
            example:
              name: "Fauzi Sofyan"
              birth_of_date: "2000-01-31"
              nip: "21"
              email: "fauzilax@gmail.com"
              gender: "male"
              position: "backend engineer"
              phone: "0813456"
              address: bdg
              password: "123"
      responses:
        201:
          description: "success insert data"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "Success create account"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /register/csv:
    post:
      tags:
        - "Admin"
      description: feature for admin registration new employee
      security:
        - JWTAuth: []
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: base64
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                birth_of_date:
                  type: string
                nip:
                  type: string
                email:
                  type: string
                  format: email
                gender:
                  type: string
                position:
                  type: string
                phone:
                  type: string
                address:
                  type: string
                password:
                  type: string
                  format: password
            example:
              name: "Fauzi Sofyan"
              birth_of_date: "2000-01-31"
              nip: "21"
              email: "fauzilax@gmail.com"
              gender: "male"
              position: "backend engineer"
              phone: "0813456"
              address: bdg
              password: "123"
      responses:
        201:
          description: "success insert data"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "Success create account"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /login:
    post:
      tags:
        - login
      description: login feature for admin and employee
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nip:
                  type: string
                password:
                  type: string
                  format: password
            example:
              nip: "21"
              password: "123"
      responses:
        200:
          description: "login success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 1
                  name: "Fauzi Sofyan"
                  nip: 21
                  gender: "male"
                  postion: "backend engineer"
                  role: "employee"
                  token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJ1c2VySUQiOjR9.QTZxERh4CwC_UnL_eJvTi_A_qdLeBZ-IjR4nqoxjodk"
                message: "login success"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /companies:
    get:
      tags:
        - "Admin"
      description: get company profile information
      summary: get company profile information
      responses:
        200:
          description: success show company profile
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1
                  company_picture: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg"
                  company_name: "Time Sync"
                  company_email: "timesync@company.co.id"
                  description: "Time Sync is a company that make a digital product"
                  company_adress: "Jl. Raya Tidar No.23, Karangbesuki, Kec. Sukun, Kota Malang, Jawa Timur 65146"
                  company_phone: "0813456"
                  sosmed: "@timesync"
                message: success show company profile
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
    put:
      tags:
        - Admin
      description: update company information
      summary: update company information
      security:
        - JWTAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                company_picture:
                  type: string
                company_name:
                  type: string
                company_email:
                  type: string
                  format: email
                description:
                  type: string
                company_adress:
                  type: string
                company_phone:
                  type: string
                sosmed:
                  type: object
            example:
              company_picture: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg"
              company_name: "Time Sync"
              company_email: "timesync@company.co.id"
              description: "Time Sync is a company that make a digital product"
              company_adress: "Jl. Raya Tidar No.23, Karangbesuki, Kec. Sukun, Kota Malang, Jawa Timur 65146"
              company_phone: "0813456"
              sosmed: "@timesync"
      responses:
        200:
          description: success update profile
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1
                  company_picture: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg"
                  company_name: "Time Sync"
                  company_email: "timesync@company.co.id"
                  description: "Time Sync is a company that make a digital product"
                  company_adress: "Jl. Raya Tidar No.23, Karangbesuki, Kec. Sukun, Kota Malang, Jawa Timur 65146"
                  company_phone: "0813456"
                  sosmed: "@timesync"
                message: Succes Update Company Profile
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /employees:
    put:
      tags:
        - "Employee"
      description: edit employee profile
      summary: edit employee profile
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                content:
                  type: string
                image:
                  type: string
                  format: binary
          application/json:
            schema:
              type: object
              example:
                profile_picture: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg"
                password: "test123"
      responses:
        200:
          description: success update profile
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1
                  profile_picture: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg"
                  password: "test123"
                message: Succes Update Employee Profile
        400:
          $ref: "#/components/responses/400"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "data not found"
        500:
          $ref: "#/components/responses/500"
    get:
      tags:
        - "Admin"
      description: get employee data
      summary: get employee data
      security:
        - JWTAuth: []
      responses:
        200:
          description: success show employee profile
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  [
                    {
                      id: 1,
                      profile_picture: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg",
                      name: "Fauzi Sofyan",
                      birth_of_date: "2000-01-31",
                      nip: "21",
                      email: "fauzilax@gmail.com",
                      gender: "male",
                      postion: "backend engineer",
                      phone: "0813456",
                      address: bdg,
                      password: "123",
                      annual_leave: 14,
                    },
                    {
                      id: 2,
                      profile_picture: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg",
                      name: "Aryo Yudhanto",
                      birth_of_date: "2000-02-11",
                      nip: "22",
                      email: "aryudhanto@gmail.com",
                      gender: "male",
                      postion: "frontend engineer",
                      phone: "08134567",
                      address: bdg,
                      password: "123",
                      annual_leave: 14,
                    },
                  ]

                message: success show employee profile
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
    delete:
      tags:
        - "Admin"
      description: deactivate employee account
      summary: deactivate employee account
      security:
        - JWTAuth: []
      responses:
        200:
          description: success deactivate
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "succes deactivate"
        400:
          $ref: "#/components/responses/400"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "data not found"
        500:
          $ref: "#/components/responses/500"
  /employees/{id}:
    put:
      tags:
        - "Admin"
      description: edit employee profile
      summary: edit employee profile
      security:
        - JWTAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                content:
                  type: string
                image:
                  type: string
                  format: binary
          application/json:
            schema:
              type: object
              example:
                profile_picture: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg"
                name: "Fauzi Sofyan"
                birth_of_date: "2000-01-31"
                nip: "21"
                email: "fauzilax@gmail.com"
                gender: "male"
                postion: "backend engineer"
                phone: "0813456"
                address: bdg
                password: "123"
                annual_leave: 14
      responses:
        200:
          description: success update profile
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1
                  profile_picture: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg"
                  name: "Fauzi Sofyan"
                  birth_of_date: "2000-01-31"
                  nip: "21"
                  email: "fauzilax@gmail.com"
                  gender: "male"
                  postion: "backend engineer"
                  phone: "0813456"
                  address: bdg
                  password: "123"
                  annual_leave: 14
                message: Succes Update Employee Profile
        400:
          $ref: "#/components/responses/400"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "data not found"
        500:
          $ref: "#/components/responses/500"
    get:
      tags:
        - "Employee"
      description: get employee profile
      summary: get employee profile
      security:
        - JWTAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: success show employee profile
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1,
                  profile_picture: "https://kurabsent.s3.amazonaws.com/2022-07-06%2006%3A40%3A47.jpg"
                  name: "Fauzi Sofyan"
                  birth_of_date: "2000-01-31"
                  nip: "21"
                  email: "fauzilax@gmail.com"
                  gender: "male"
                  postion: "backend engineer"
                  phone: "0813456"
                  address: bdg,
                  password: "123"
                  annual_leave: 14
                message: success show employee profile
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /settings:
    put:
      tags:
        - "Admin"
      description: settings feature for admin to set working hour and annual leave for employee
      summary: settings feature for admin to set working hour and annual leave for employee
      security:
        - JWTAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                check_in:
                  type: string
                  example: "08:00"
                leave_off:
                  type: string
                  example: "17:00"
                tollerance:
                  type: string
                  example: "30:00"
                annual_leave_settings:
                  type: integer
                  example: 14
      responses:
        200:
          description: "success update working hour schedule and annual leave for employee"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  check_in: "08:00"
                  leave_off: "17:00"
                  annual_leave_settings: 14
                message: "update working hour schedule and annual leave for employee success"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /announcements:
    post:
      tags:
        - "Admin"
      description: announcement feature for admin to send message to employee
      summary: announcement feature for admin to send message to employee
      security:
        - JWTAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                to:
                  type: string
                  example: "2303"
                announcement_title:
                  type: string
                  example: "Libur"
                announcement_description:
                  type: string
                  example: "Karena besok ada rapat atasan mendadak, jadi kantor diliburkan"
      responses:
        200:
          description: "success send announcement message to employee"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 1
                  to: "2303"
                  announcement_title: "Libur"
                  announcement_description: "Karena besok ada rapat atasan mendadak, jadi kantor diliburkan"
                message: "send announcement message to employee success"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
    get:
      tags:
        - "Admin"
      description: get all announcement message for admin
      summary: get all announcement message for admin
      security:
        - JWTAuth: []
      responses:
        200:
          description: "success get all announcement message for admin"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  [
                    {
                      id: 1,
                      announcement_title: "Libur",
                      announcement_description: "Karena besok ada rapat atasan mendadak, jadi kantor diliburkan",
                    },
                    {
                      id: 2,
                      announcement_title: "Wajib Masuk",
                      announcement_description: "Karena sabtu nanti ada agenda kerja bakti, jadi semua karyawan diharapkan untuk hadir",
                    },
                  ]
                message: "get all announcement message for admin success"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
    delete:
      tags:
        - "Admin"
      description: delete announcement message
      summary: delete announcement message
      security:
        - JWTAuth: []
      responses:
        200:
          description: success delete announcement message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "succes delete announcement message"
        400:
          $ref: "#/components/responses/400"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "data not found"
        500:
          $ref: "#/components/responses/500"
  /presences:
    get:
      tags:
        - "Admin"
      description: total employee precences in a day
      summary: total employee precences in a day
      security:
        - JWTAuth: []
      responses:
        200:
          description: "success get total employee precences"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  total_employee_presences: 9
                message: "get total employee precences success"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /presences/{id}:
    get:
      tags:
        - "Employee"
      description: total precences in a day per employee
      summary: total precences in a day per employee
      security:
        - JWTAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: "success get total precences in a day per employee"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  employee_presences: 1
                message: "get total precences in a day per employee success"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /employees/attendance:
    post:
      tags:
        - "Employee"
      description: clock in for employee attendance at start of working hour
      summary: clock in for employee attendance at start of working hour
      security:
        - JWTAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                latitude:
                  type: number
                  format: double
                  example: -6.4096
                longitude:
                  type: number
                  format: double
                  example: 106.8185
      responses:
        200:
          description: "clock in success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 1
                  user_id: 2
                  clock_in_location: "Jalan Cagar Alam,Depok,Jawa Barat,10550"
                  clock_out_location: ""
                  clock_in_map_location: "https://www.openstreetmap.org/#map=16/-6.4096/106.8185"
                  clock_out_map_location: ""
                  clock_in: "07:50"
                  clock_out: ""
                message: "clock in success"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
    put:
      tags:
        - "Employee"
      description: clock out for employee attendance after working hour
      summary: clock out for employee attendance after working hour
      security:
        - JWTAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                latitude:
                  type: number
                  format: double
                  example: -6.4096
                longitude:
                  type: number
                  format: double
                  example: 106.8185
      responses:
        200:
          description: "clock out success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  id: 1
                  user_id: 2
                  clock_in_location: "Jalan Cagar Alam,Depok,Jawa Barat,10550"
                  clock_out_location: "Jalan Cagar Alam,Depok,Jawa Barat,10550"
                  clock_in_map_location: "https://www.openstreetmap.org/#map=16/-6.4096/106.8185"
                  clock_out_map_location: "https://www.openstreetmap.org/#map=16/-6.4096/106.8185"
                  clock_in: "07:50"
                  clock_out: "17:00"
                message: "clock out success"
        400:
          $ref: "#/components/responses/400"
        404:
          description: data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "data not found"
        500:
          $ref: "#/components/responses/500"
    get:
      tags:
        - "Employee"
      description: employee attendance menu
      summary: employee attendance menu
      security:
        - JWTAuth: []
      responses:
        200:
          description: success show employee attendance menu
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1,
                  latitude: -6.4096
                longitude: 106.8185
                message: success show employee attendance menu
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /approvals:
    post:
      tags:
        - "Employee"
      description: employee can propose for permission to be absent
      summary: employee can propose for permission to be absent
      security:
        - JWTAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                approval_title:
                  type: object
                  example: ["sick", "leave", "late"]
                approval_start_date:
                  type: string
                  example: "2023-02-01"
                approval_end_date:
                  type: string
                  example: "2023-02-02"
                approval_description:
                  type: string
                  example: "i am going to hospital today, my body didn't feel so good for work"
                approval_image:
                  type: string
                  example: "https://1.bp.blogspot.com/-e8s4FEI8wKs/WgpNDkIWdhI/AAAAAAAAAyQ/SUryjPXhJ28zqb32zPCyGZLjXCT0khK2wCLcBGAs/s1600/Contoh%2BSurat%2BKeterangan%2BSakit.png"
                approval_status:
                  type: string
                  example: "pending"
      responses:
        200:
          description: "success send an approval"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  approval_title: "sick"
                  approval_start_date: "2023-02-01"
                  approval_end_date: "2023-02-02"
                  approval_description: "i am going to hospital today, my body didn't feel so good for work"
                  approval_image: "https://1.bp.blogspot.com/-e8s4FEI8wKs/WgpNDkIWdhI/AAAAAAAAAyQ/SUryjPXhJ28zqb32zPCyGZLjXCT0khK2wCLcBGAs/s1600/Contoh%2BSurat%2BKeterangan%2BSakit.png"
                  approval_status: "pending"
                message: "send an approval success"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
    put:
      tags:
        - "Admin"
      description: Approval for Admin
      summary: Approval for Admin
      security:
        - JWTAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                approval_title:
                  type: object
                  example: ["sick", "leave", "late"]
                approval_date:
                  type: string
                  example: "2023-02-01"
                approval_description:
                  type: string
                  example: "i am going to hospital today, my body didn't feel so good for work"
                approval_image:
                  type: string
                  example: "https://1.bp.blogspot.com/-e8s4FEI8wKs/WgpNDkIWdhI/AAAAAAAAAyQ/SUryjPXhJ28zqb32zPCyGZLjXCT0khK2wCLcBGAs/s1600/Contoh%2BSurat%2BKeterangan%2BSakit.png"
                approval_status:
                  type: string
                  example: "approved"
      responses:
        200:
          description: "success approve employee permission"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseObject"
              example:
                data:
                  approval_title: "sick"
                  approval_date: "2023-02-01"
                  approval_description: "i am going to hospital today, my body didn't feel so good for work"
                  approval_image: "https://1.bp.blogspot.com/-e8s4FEI8wKs/WgpNDkIWdhI/AAAAAAAAAyQ/SUryjPXhJ28zqb32zPCyGZLjXCT0khK2wCLcBGAs/s1600/Contoh%2BSurat%2BKeterangan%2BSakit.png"
                  approval_status: "approved"
                message: "success approve employee permission success"
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /approvals/records:
    get:
      tags:
        - "Employee"
      description: get employee approval record
      summary: get employee approval record
      security:
        - JWTAuth: []
      responses:
        200:
          description: success show employee approval record
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  [
                    {
                      id: 1,
                      approval_date: "2023-02-01",
                      leave: "1 Day annual leave",
                      approval_status: "Pending",
                    },
                    {
                      id: 2,
                      approval_date: "2023-02-02",
                      leave: "1 Day sick leave",
                      approval_status: "Approved",
                    },
                    {
                      id: 3,
                      approval_date: "2023-02-03",
                      leave: "1 Day annual leave",
                      approval_status: "Rejected",
                    },
                    {
                      id: 4,
                      approval_date: "2023-02-04",
                      leave: "1 Day annual leave",
                      approval_status: "Approved",
                    },
                  ]
                message: success show employee approval record
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /employees/records:
    get:
      tags:
        - "Employee"
      description: get employee attendance record
      summary: get employee attendance record
      security:
        - JWTAuth: []
      responses:
        200:
          description: success show employee attendance record
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  [
                    {
                      id: 1,
                      attendace_date: "2023-02-01",
                      clock_in: "07:50",
                      clock_out: "17:00",
                      attendace_status: "Presence",
                    },
                    {
                      id: 2,
                      attendace_date: "2023-02-02",
                      clock_in: "08:00",
                      clock_out: "17:20",
                      attendace_status: "Presence",
                    },
                    {
                      id: 3,
                      attendace_date: "2023-02-03",
                      clock_in: "",
                      clock_out: "",
                      attendace_status: "Absence",
                    },
                    {
                      id: 4,
                      attendace_date: "2023-02-04",
                      clock_in: "",
                      clock_out: "",
                      attendace_status: "On Leave",
                    },
                    {
                      id: 5,
                      attendace_date: "2023-02-05",
                      clock_in: "",
                      clock_out: "",
                      attendace_status: "Absence",
                    },
                  ]
                message: success show employee attendance record
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /employees/inbox:
    get:
      tags:
        - "Employee"
      description: get inbox message from admin for employee
      summary: get inbox message from admin for employee
      security:
        - JWTAuth: []
      responses:
        200:
          description: success show message from admin for employee
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  [
                    {
                      id: 1,
                      inbox_date: "2023-02-01",
                      inbox_title: "Libur",
                      inbox_description: "Karena besok ada rapat atasan mendadak, jadi kantor diliburkan",
                    },
                    {
                      id: 2,
                      inbox_date: "2023-02-03",
                      inbox_title: "Wajib Masuk",
                      inbox_description: "Karena sabtu nanti ada agenda kerja bakti, jadi semua karyawan diharapkan untuk hadir",
                    },
                  ]
                message: success show employee inbox message
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /graph/wwh:
    get:
      tags:
        - "Admin"
      description: graph data for employee weekly working hour
      summary: graph data for employee weekly working hour
      security:
        - JWTAuth: []
      responses:
        200:
          description: success show graph data for employee weekly working hour
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1,
                  w1: 300,
                  w2: 320,
                  w3: 290,
                  w4: 340,
                message: success show graph data for employee weekly working hour
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
  /graph/wle:
    get:
      tags:
        - "Admin"
      description: graph data for weekly late employee
      summary: graph data for weekly late employee
      security:
        - JWTAuth: []
      responses:
        200:
          description: success show graph data for weekly late employee
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 1,
                  w1: 3,
                  w2: 4,
                  w3: 10,
                  w4: 5,
                message: success show graph data for weekly late employee
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"

components:
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    responseObject:
      type: object
      properties:
        data:
          type: object
        message:
          type: string
  responses:
    400:
      description: "error from user"
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
          example:
            message: "Bad request"
    500:
      description: "error from server"
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
          example:
            message: "Internal server error"
